build_wheels_windows:
    name: Build wheels on Windows
    runs-on: windows-latest
    strategy:
      matrix:
        architecture: [x64, x86]

    steps:
      - uses: actions/checkout@v3

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.architecture }}

      - name: Adjust PATH for MSVC and verify tools
        shell: powershell
        run: |
          $vsPath = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath
          $linkPath = Join-Path $vsPath "VC\Tools\MSVC\*\bin\Hostx64\x64\link.exe"
          $link = Get-ChildItem $linkPath | Select-Object -First 1 -ExpandProperty DirectoryName
          $env:PATH = "$link;$env:PATH"
          echo "Updated PATH: $env:PATH"
          echo "PATH=$env:PATH" >> $env:GITHUB_ENV
          
          # Verify MSVC tools
          where link
          where cl
          link
          cl

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.architecture }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cmake ninja

      - name: Build SLEEF
        shell: cmd
        run: |
          git clone https://github.com/shibatch/sleef.git
          cd sleef
          cmake -G Ninja -S . -B build -DSLEEF_BUILD_QUAD:BOOL=ON -DSLEEF_BUILD_SHARED_LIBS:BOOL=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON
          cmake --build build --config Release
          cmake --install build --prefix C:\sleef

      - name: Install cibuildwheel
        run: pip install cibuildwheel==2.20.0

      - name: Build wheels
        env:
          CIBW_BUILD: 'cp310-* cp311-* cp312-*'
          CIBW_ARCHS_WINDOWS: ${{ matrix.architecture == 'x86' && 'x86' || 'AMD64' }}
          CIBW_BUILD_VERBOSITY: '1'
          SLEEF_DIR: C:\sleef
          DISTUTILS_USE_SDK: '1'
          MSSdk: '1'
          CIBW_ENVIRONMENT: >-
            SLEEF_INCLUDE_DIR="C:\\sleef\\include"
            SLEEF_LIBRARY="C:\\sleef\\lib"
            PATH="C:\\sleef\\bin;$PATH"
          CIBW_REPAIR_WHEEL_COMMAND: >
            delvewheel repair -w {dest_dir} {wheel}
          CIBW_BEFORE_BUILD: |
            pip install delvewheel
            where link
            where cl
          CIBW_TEST_COMMAND: |
            pip install {package}[test]
            pytest {project}\tests
          CIBW_TEST_EXTRAS: 'test'
        shell: bash
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        working-directory: ./quaddtype

      - uses: actions/upload-artifact@v4
        with:
          path: ./quaddtype/wheelhouse/*.whl
          name: wheels-windows-${{ matrix.architecture }}