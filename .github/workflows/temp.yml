name: Build Wheels

on:
  push:
    branches:
      - package-fix
    tags:
      - 'v*'
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install cibuildwheel
        run: pip install cibuildwheel==2.20.0

      - name: Build wheels
        env:
          CIBW_BUILD: 'cp310-* cp311-* cp312-*'
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_BUILD_VERBOSITY: '3'
          CIBW_BEFORE_ALL_LINUX: |
            yum install -y mpfr-devel openssl-devel fftw-devel
            git clone https://github.com/shibatch/sleef.git
            cd sleef
            cmake -S . -B build -DSLEEF_BUILD_QUAD:BOOL=ON -DSLEEF_BUILD_SHARED_LIBS:BOOL=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON
            cmake --build build/ --clean-first -j
            cmake --install build --prefix /usr
          CIBW_BEFORE_ALL_MACOS: |
            brew install mpfr openssl fftw
            git clone https://github.com/shibatch/sleef.git
            cd sleef
            cmake -S . -B build -DSLEEF_BUILD_QUAD:BOOL=ON -DSLEEF_BUILD_SHARED_LIBS:BOOL=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON
            cmake --build build/ --clean-first -j
            sudo cmake --install build --prefix /usr/local
          CIBW_ENVIRONMENT: >
            SLEEF_INCLUDE_DIR="/usr/include"
            SLEEF_LIBRARY="/usr/lib"
          CIBW_ENVIRONMENT_MACOS: >
            SLEEF_INCLUDE_DIR="/usr/local/include"
            SLEEF_LIBRARY="/usr/local/lib"
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: >
            auditwheel repair -w {dest_dir} --plat manylinux_2_28_x86_64 {wheel}
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            delocate-wheel -w {dest_dir} -v {wheel}
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: |
            python -c "import os; print('SLEEF_PATH:', os.environ.get('SLEEF_PATH', 'Not set'))"
            python -c "import platform; print('Python version:', platform.python_version())"
            python -c "import sys; print('sys.platform:', sys.platform)"
            python -c "import numpy_quaddtype; print('numpy_quaddtype imported successfully')"
            pytest {project}/tests -v
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        working-directory: ./quaddtype

      - uses: actions/upload-artifact@v3
        with:
          path: ./quaddtype/wheelhouse/*.whl
          name: wheels-${{ matrix.os }}