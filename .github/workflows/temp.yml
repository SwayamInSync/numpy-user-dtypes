name: Build Wheels

on:
  push:
    branches:
      - package-fix
    tags:
      - 'v*'
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: '3.10'
          channels: conda-forge

      - name: Install SLEEF
        shell: bash -l {0}
        run: |
          conda install -y -c conda-forge sleef
          echo $CONDA_PREFIX

      - name: Install cibuildwheel
        run: pip install cibuildwheel==2.20.0

      - name: Build wheels
        env:
          CIBW_BUILD_VERBOSITY: '1'
          CIBW_SKIP: 'pp* cp36-* cp37-* cp38-* cp39-* cp313-*'
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_ENVIRONMENT: >
            LD_LIBRARY_PATH="$CONDA_PREFIX/lib:$LD_LIBRARY_PATH"
            LIBRARY_PATH="$CONDA_PREFIX/lib:$LIBRARY_PATH"
            CFLAGS="-I$CONDA_PREFIX/include $CFLAGS"
            CXXFLAGS="-I$CONDA_PREFIX/include $CXXFLAGS"
            LDFLAGS="-L$CONDA_PREFIX/lib $LDFLAGS"
          CIBW_BEFORE_BUILD: pip install meson meson-python ninja numpy
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: >
            auditwheel repair -w {dest_dir} --plat manylinux_2_28_x86_64 {wheel}
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            delocate-wheel -w {dest_dir} -v {wheel}
          CIBW_TEST_COMMAND: |
            python -c "import os; print('CONDA_PREFIX:', os.environ.get('CONDA_PREFIX', 'Not set'))"
            python -c "import platform; print('Python version:', platform.python_version())"
            python -c "import sys; print('sys.platform:', sys.platform)"
            python -c "import numpy_quaddtype; print('numpy_quaddtype imported successfully')"
            pip install {package}[test]
            pytest {project}/tests
          CIBW_TEST_EXTRAS: 'test'
        run: |
          if [[ "${{ matrix.os }}" == ubuntu-* ]]; then
            CIBW_BUILD='cp310-manylinux_x86_64 cp311-manylinux_x86_64 cp312-manylinux_x86_64'
          elif [[ "${{ matrix.os }}" == macos-13 ]]; then
            CIBW_ARCHS_MACOS='x86_64'
          elif [[ "${{ matrix.os }}" == macos-14 ]]; then
            CIBW_ARCHS_MACOS='arm64'
          fi
          echo "CONDA_PREFIX: $CONDA_PREFIX"
          ls $CONDA_PREFIX/include/sleef*
          echo "PATH: $PATH"
          which python
          python --version
          which pip
          pip --version
          cd quaddtype
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./quaddtype/wheelhouse/*.whl
          name: wheels-${{ matrix.os }}