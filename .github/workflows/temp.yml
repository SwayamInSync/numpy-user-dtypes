name: Build Wheels

on:
  push:
    branches:
      - package-fix
    tags:
      - 'v*'
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '>=3.10.0'

      - name: Install cibuildwheel
        run: pip install cibuildwheel==2.20.0

      - name: Build wheels
        env:
          CIBW_BUILD: 'cp310-* cp311-* cp312-*'
          CIBW_BUILD_VERBOSITY: '1'
          CIBW_TEST_COMMAND: |
            pip install {package}[test]
            pytest {project}/tests
          CIBW_TEST_EXTRAS: 'test'
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            export CIBW_MANYLINUX_X86_64_IMAGE=manylinux_2_28
            export CIBW_BEFORE_ALL="yum install -y cmake && git clone https://github.com/shibatch/sleef.git && cd sleef && cmake -S . -B build -DSLEEF_BUILD_QUAD:BOOL=ON -DSLEEF_BUILD_SHARED_LIBS:BOOL=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON && cmake --build build/ --clean-first -j && cmake --install build --prefix /usr/local"
            export CIBW_ENVIRONMENT="CFLAGS='-I/usr/local/include' CXXFLAGS='-I/usr/local/include' LDFLAGS='-L/usr/local/lib64' LD_LIBRARY_PATH='/usr/local/lib64:\$LD_LIBRARY_PATH'"
            export CIBW_REPAIR_WHEEL_COMMAND="auditwheel repair -w {dest_dir} --plat manylinux_2_28_x86_64 {wheel}"
          elif [ "${{ runner.os }}" == "macOS" ]; then
            export CIBW_ARCHS_MACOS="${{ matrix.os == 'macos-13' && 'x86_64' || 'arm64' }}"
            export CIBW_BEFORE_ALL="git clone https://github.com/shibatch/sleef.git && cd sleef && cmake -S . -B build -DSLEEF_BUILD_QUAD:BOOL=ON -DSLEEF_BUILD_SHARED_LIBS:BOOL=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_INSTALL_RPATH='@loader_path/../lib' -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON && cmake --build build/ --clean-first -j && sudo cmake --install build --prefix /usr/local"
            export CIBW_ENVIRONMENT="MACOSX_DEPLOYMENT_TARGET='11.0' DYLD_LIBRARY_PATH='/usr/local/lib:\$DYLD_LIBRARY_PATH' CFLAGS='-I/usr/local/include' CXXFLAGS='-I/usr/local/include' LDFLAGS='-L/usr/local/lib'"
            export CIBW_REPAIR_WHEEL_COMMAND="delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"
          fi
          python -m cibuildwheel --output-dir wheelhouse
        working-directory: ./quaddtype

      - uses: actions/upload-artifact@v4
        with:
          path: ./quaddtype/wheelhouse/*.whl
          name: wheels-${{ matrix.os }}