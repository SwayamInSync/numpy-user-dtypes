name: Build quaddtype wheels and release

on:
  push:
    branches:
      - testing-pkg
    tags:
      - "v*"
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Display Python version
        shell: cmd
        run: |
          "C:\Program Files\PowerShell\7\pwsh.exe" -Command "$env:PATH; Get-Command python; python --version; python -c 'import sys; print(sys.executable)'"

      - name: Install cibuildwheel
        shell: cmd
        run: |
          "C:\Program Files\PowerShell\7\pwsh.exe" -Command "python -m pip install --upgrade pip; pip install cibuildwheel==2.20.0"

      - name: Build wheels
        shell: cmd
        run: |
          "C:\Program Files\PowerShell\7\pwsh.exe" -Command "python -m cibuildwheel --output-dir wheelhouse"
        env:
          CIBW_BUILD_VERBOSITY: "1"
          CIBW_ARCHS_MACOS: ${{ matrix.os == 'macos-13' && 'x86_64' || 'arm64' }}
          CIBW_BEFORE_ALL_WINDOWS: >
            cmd /c ""C:\Program Files\PowerShell\7\pwsh.exe" -Command "
            Invoke-WebRequest -Uri 'https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe' -OutFile 'miniconda.exe';
            Start-Process -FilePath 'miniconda.exe' -ArgumentList '/S','/D=$env:UserProfile\Miniconda3' -Wait;
            $env:PATH = '$env:UserProfile\Miniconda3;$env:UserProfile\Miniconda3\Scripts;$env:UserProfile\Miniconda3\Library\bin;' + $env:PATH;
            & $env:UserProfile\Miniconda3\Scripts\activate.ps1;
            conda config --add channels conda-forge;
            conda config --set channel_priority strict;
            conda install -y -c conda-forge sleef
            ""
        working-directory: ./quaddtype

      - uses: actions/upload-artifact@v2
        with:
          path: ./quaddtype/wheelhouse/*.whl
          name: wheels-${{ matrix.os }}

  create_release:
    name: Create Release
    needs: build_wheels
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./artifacts/**/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
