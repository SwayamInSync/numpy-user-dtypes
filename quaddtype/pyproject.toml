[build-system]
requires = [
    "meson>=1.3.2",
    "meson-python",
    "wheel",
    "numpy"
]
build-backend = "mesonpy"

[project]
name = "quaddtype"
description = "Quad (128-bit) float dtype for numpy"
version = "0.0.1"
readme = 'README.md'
authors = [{name = "Swayam Singh", email = "singhswayam008@gmail.com"}]
requires-python = ">=3.10.0"
dependencies = [
    "numpy"
]

[project.optional-dependencies]
test = [
    "pytest",
]

[tool.cibuildwheel]
archs = ["auto64"]
skip = ["*-musllinux*", "pp*", "cp36-*", "cp37-*", "cp38-*", "cp39-*", "cp313-*"]
test-command = """
python -c "import platform; print('Python version:', platform.python_version())"
python -c "import sys; print('sys.platform:', sys.platform)"
python -c "import quaddtype; print('quaddtype imported successfully')"
pip install {package}[test]
pytest {project}/tests
"""
test-extras = ["test"]
manylinux-x86_64-image = "manylinux_2_28"

[tool.cibuildwheel.linux]
before-all = '''
set -ex
yum install -y wget
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
bash miniconda.sh -b -p $HOME/miniconda
export PATH="$HOME/miniconda/bin:$PATH"
conda init bash
source ~/.bashrc
conda update -q conda
conda config --add channels conda-forge
conda config --set channel_priority strict
conda install -y -c conda-forge sleef
if [ ! -f "$HOME/miniconda/include/sleef.h" ]; then
    echo "sleef.h not found. Installation may have failed."
    exit 1
fi
ls -l $HOME/miniconda/include/sleef.h
ls -l $HOME/miniconda/lib/libsleef*
'''
environment = { LD_LIBRARY_PATH = "$HOME/miniconda/lib:$LD_LIBRARY_PATH", LIBRARY_PATH = "$HOME/miniconda/lib:$LIBRARY_PATH", CFLAGS = "-I$HOME/miniconda/include $CFLAGS", CXXFLAGS = "-I$HOME/miniconda/include $CXXFLAGS", LDFLAGS = "-L$HOME/miniconda/lib $LDFLAGS" }
repair-wheel-command = "auditwheel repair -w {dest_dir} --plat manylinux_2_28_x86_64 {wheel}"

[tool.cibuildwheel.macos]
before-all = '''
set -ex
ARCH=$(uname -m)
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-${ARCH}.sh -O miniconda.sh
bash miniconda.sh -b -p $HOME/miniconda
export PATH="$HOME/miniconda/bin:$PATH"
source ~/.bash_profile
conda update -q conda
conda config --add channels conda-forge
conda config --set channel_priority strict
conda install -y -c conda-forge sleef
if [ ! -f "$HOME/miniconda/include/sleef.h" ]; then
    echo "sleef.h not found. Installation may have failed."
    exit 1
fi
ls -l $HOME/miniconda/include/sleef.h
ls -l $HOME/miniconda/lib/libsleef*
'''
environment = {DYLD_LIBRARY_PATH = "$HOME/miniconda/lib:$DYLD_LIBRARY_PATH", LIBRARY_PATH = "$HOME/miniconda/lib:$LIBRARY_PATH", CFLAGS = "-I$HOME/miniconda/include $CFLAGS", CXXFLAGS = "-I$HOME/miniconda/include $CXXFLAGS", LDFLAGS = "-L$HOME/miniconda/lib $LDFLAGS", SLEEF_INCLUDE_DIR = "$HOME/miniconda/include", SLEEF_LIBRARY = "$HOME/miniconda/lib", MACOSX_DEPLOYMENT_TARGET = "10.13"}
repair-wheel-command = "delocate-wheel -w {dest_dir} -v {wheel}"

[tool.cibuildwheel.windows]
before-all = '''
"C:\\Program Files\\PowerShell\\7\\pwsh.EXE" -command "& { $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; Write-Host 'Downloading Miniconda...'; Invoke-WebRequest -Uri 'https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe' -OutFile 'miniconda.exe'; if (!(Test-Path 'miniconda.exe') -or ((Get-Item 'miniconda.exe').Length -eq 0)) { Write-Error 'Miniconda download failed or file is empty'; Exit 1; }; Write-Host 'Setting up permissions for Miniconda installation directory...'; $installPath = 'C:\\Users\\$env:USERNAME\\Miniconda3'; if (!(Test-Path $installPath)) { New-Item -ItemType Directory -Force -Path $installPath; }; icacls $installPath /grant $env:USERNAME:(OI)(CI)(F) /T; if ($LASTEXITCODE -ne 0) { Write-Error 'Failed to set permissions on installation directory'; Exit 1; }; Write-Host 'Installing Miniconda...'; Start-Process -FilePath 'miniconda.exe' -ArgumentList '/S','/D=C:\\Users\\$env:USERNAME\\Miniconda3' -Wait; if ($LASTEXITCODE -ne 0) { Write-Error 'Miniconda installation failed'; Exit 1; }; Write-Host 'Waiting for installation to complete...'; Start-Sleep -Seconds 30; Write-Host 'Checking if Miniconda was installed...'; if (!(Test-Path 'C:\\Users\\$env:USERNAME\\Miniconda3')) { Write-Error 'Miniconda directory not found, installation failed'; Exit 1; }; Write-Host 'Updating PATH...'; $env:PATH = 'C:\\Users\\$env:USERNAME\\Miniconda3;C:\\Users\\$env:USERNAME\\Miniconda3\\Scripts;C:\\Users\\$env:USERNAME\\Miniconda3\\Library\\bin;' + $env:PATH; Write-Host 'Checking for activate.ps1...'; if (!(Test-Path 'C:\\Users\\$env:USERNAME\\Miniconda3\\Scripts\\activate.ps1')) { Write-Error 'Miniconda installation failed or activate.ps1 not found'; Exit 1; }; Write-Host 'Activating Conda...'; & C:\\Users\\$env:USERNAME\\Miniconda3\\Scripts\\activate.ps1; if (!(Get-Command conda -ErrorAction SilentlyContinue)) { Write-Host 'Conda not found in PATH, trying to initialize...'; & C:\\Users\\$env:USERNAME\\Miniconda3\\Scripts\\conda.exe init powershell; & C:\\Users\\$env:USERNAME\\Miniconda3\\Scripts\\conda.exe activate; }; Write-Host 'Configuring Conda...'; conda config --add channels conda-forge; conda config --set channel_priority strict; Write-Host 'Installing sleef...'; conda install -y -c conda-forge sleef; Write-Host 'Setup completed successfully.' }"
'''

before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel} --add-path %UserProfile%\\Miniconda3\\Library\\bin"
environment = { PATH = "%UserProfile%\\Miniconda3\\Scripts;%UserProfile%\\Miniconda3\\Library\\bin;%PATH%", INCLUDE = "%UserProfile%\\Miniconda3\\Library\\include;%INCLUDE%", LIB = "%UserProfile%\\Miniconda3\\Library\\lib;%LIB%", SLEEF_INCLUDE_DIR = "%UserProfile%\\Miniconda3\\Library\\include", SLEEF_LIBRARY = "%UserProfile%\\Miniconda3\\Library\\lib"}